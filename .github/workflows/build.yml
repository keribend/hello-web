name: Build multi-arch image

on:
  push:
    tags:
      - 'v*.*.*'  # Matches tags like v1.0.0
      - 'v*.*.*-*'  # Also matches pre-release lie v1.0.0-beta.1

jobs:
  build:
    runs-on: self-hosted
    steps:
      # 1. Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Ensure buildx is available (persistent builder)
      - name: Ensure buildx builder exists
        run: |
          if ! docker buildx inspect syno-builder >/dev/null 2>&1; then
            docker buildx create --use --name syno-builder
          else
            docker buildx use syno-builder
          fi
          docker buildx inspect --bootstrap

      # 3. Cache docker layers (local path)
      - name: Cache docker layers
        use: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os}}-buildx-${{ github.ref_name }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4. Log in to container registry
      # You can switch ghcr.io â†’ docker.io if you prefer Docker Hub
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Build and push multi-arch image
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          # uncomment this if to build also for different architectures
          # platforms: linux/arm64,linux/amd64
          platforms: linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp.buildx-cache-new,mode=max
          tags: |
            ghcr.io/keribend/hello-web:${{ github.ref_name }}
            ghcr.io/keribend/hello-web:latest

      # 6. Persist new cache between runs
      - name: Move new cache
        if: success()
        run: |
         rm -rf /tmp/.buildx-cache
         mv /tmp/.buildx-cache-new /tmp/.buildx-cache 
